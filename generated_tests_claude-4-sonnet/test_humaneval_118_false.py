# Test cases for HumanEval/118
# Generated using Claude API


def get_closest_vowel(word):
    """You are given a word. Your task is to find the closest vowel that stands between 
    two consonants from the right side of the word (case sensitive).
    
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't
    find any vowel met the above condition. 

    You may assume that the given string contains English letter only.

    Example:
    get_closest_vowel("yogurt") ==> "u"
    get_closest_vowel("FULL") ==> "U"
    get_closest_vowel("quick") ==> ""
    get_closest_vowel("ab") ==> ""
    """

    if len(word) < 3:
        return ""

    vowels = {"a", "e", "i", "o", "u", "A", "E", 'O', 'U', 'I'}
    for i in range(len(word)-2, 0, -1):
        if word[i] in vowels:
            if (word[i+1] not in vowels) and (word[i-1] not in vowels):
                return word[i]
    return ""


# Generated test cases:
import pytest

def get_closest_vowel(word):
    if len(word) < 3:
        return ""

    vowels = {"a", "e", "i", "o", "u", "A", "E", 'O', 'U', 'I'}
    for i in range(len(word)-2, 0, -1):
        if word[i] in vowels:
            if (word[i+1] not in vowels) and (word[i-1] not in vowels):
                return word[i]
    return ""

def test_get_closest_vowel():
    test_cases = [
        ("", ""),
        ("a", ""),
        ("ab", ""),
        ("abc", ""),
        ("bac", ""),
        ("cab", ""),
        ("bad", "a"),
        ("bed", "e"),
        ("bid", "i"),
        ("bod", "o"),
        ("bud", "u"),
        ("BAD", "A"),
        ("BED", "E"),
        ("BID", "I"),
        ("BOD", "O"),
        ("BUD", "U"),
        ("quick", "u"),
        ("yogurt", "u"),
        ("computer", "u"),
        ("beautiful", "u"),
        ("programming", "a"),
        ("aeiou", ""),
        ("bcdfg", ""),
        ("baeiouc", ""),
        ("baec", "e"),
        ("caeb", "e"),
        ("test", "e"),
        ("hello", "e"),
        ("world", "o"),
        ("python", "o"),
        ("function", "o"),
        ("example", "a"),
        ("vowels", "e"),
        ("consonants", "o"),
        ("algorithm", "o"),
        ("structure", "u"),
        ("development", "e"),
        ("application", "i"),
        ("implementation", "e"),
        ("optimization", "i"),
        ("performance", "o"),
        ("efficiency", "e"),
        ("complexity", "e"),
        ("abstraction", "o"),
        ("encapsulation", "i"),
        ("inheritance", "a"),
        ("polymorphism", "i"),
        ("composition", "i"),
        ("aggregation", "a"),
        ("association", "i"),
        ("dependency", "e"),
        ("coupling", "i"),
        ("cohesion", "e"),
        ("modularity", "i"),
        ("scalability", "i"),
        ("maintainability", "i"),
        ("reliability", "i"),
        ("availability", "i"),
        ("security", "u"),
        ("usability", "i"),
        ("accessibility", "i"),
        ("compatibility", "i"),
        ("portability", "i"),
        ("interoperability", "i"),
        ("extensibility", "i"),
        ("flexibility", "i"),
        ("adaptability", "i"),
        ("robustness", "u"),
        ("resilience", "e"),
        ("fault", "a"),
        ("tolerance", "a"),
        ("recovery", "e"),
        ("backup", "a"),
        ("restore", "o"),
        ("archive", "i"),
        ("compress", "e"),
        ("decompress", "e"),
        ("encrypt", "y"),
        ("decrypt", "y"),
        ("authenticate", "a"),
        ("authorize", "o"),
        ("validate", "a"),
        ("verify", "i"),
        ("sanitize", "i"),
        ("normalize", "a"),
        ("serialize", "a"),
        ("deserialize", "a"),
        ("marshal", "a"),
        ("unmarshal", "a"),
        ("encode", "o"),
        ("decode", "o"),
        ("parse", "a"),
        ("format", "o"),
        ("transform", "o"),
        ("convert", "e"),
        ("migrate", "a"),
        ("upgrade", "a"),
        ("downgrade", "a"),
        ("install", "a"),
        ("uninstall", "a"),
        ("configure", "u"),
        ("customize", "o"),
        ("personalize", "a"),
        ("localize", "a"),
        ("internationalize", "a"),
        ("globalize", "a"),
        ("regionalize", "a"),
        ("standardize", "a"),
        ("harmonize", "o"),
        ("synchronize", "o"),
        ("coordinate", "a"),
        ("collaborate", "a"),
        ("communicate", "a"),
        ("negotiate", "o"),
        ("mediate", "a"),
        ("arbitrate", "a"),
        ("facilitate", "a"),
        ("moderate", "a"),
        ("regulate", "a"),
        ("control", "o"),
        ("manage", "a"),
        ("supervise", "i"),
        ("monitor", "i"),
        ("observe", "e"),
        ("inspect", "e"),
        ("examine", "a"),
        ("analyze", "a"),
        ("evaluate", "a"),
        ("assess", "e"),
        ("measure", "a"),
        ("quantify", "i"),
        ("qualify", "a"),
        ("classify", "i"),
        ("categorize", "o"),
        ("organize", "a"),
        ("arrange", "a"),
        ("sort", "o"),
        ("order", "e"),
        ("rank", "a"),
        ("prioritize", "i"),
        ("schedule", "e"),
        ("plan", "a"),
        ("design", "i"),
        ("architect", "e"),
        ("blueprint", "i"),
        ("prototype", "o"),
        ("model", "o"),
        ("simulate", "a"),
        ("emulate", "a"),
        ("replicate", "a"),
        ("duplicate", "a"),
        ("copy", "o"),
        ("clone", "o"),
        ("mirror", "o"),
        ("reflect", "e"),
        ("project", "e"),
        ("display", "a"),
        ("render", "e"),
        ("visualize", "a"),
        ("illustrate", "a"),
        ("demonstrate", "o"),
        ("present", "e"),
        ("exhibit", "i"),
        ("showcase", "a"),
        ("highlight", "i"),
        ("emphasize", "a"),
        ("stress", "e"),
        ("accent", "e"),
        ("focus", "o"),
        ("concentrate", "a"),
        ("center", "e"),
        ("target", "a"),
        ("aim", "a"),
        ("direct", "e"),
        ("guide", "i"),
        ("lead", "e"),
        ("navigate", "a"),
        ("steer", "e"),
        ("drive", "i"),
        ("operate", "a"),
        ("run", "u"),
        ("execute", "u"),
        ("perform", "o"),
        ("accomplish", "o"),
        ("achieve", "e"),
        ("attain", "a"),
        ("reach", "e"),
        ("obtain", "a"),
        ("acquire", "i"),
        ("gain", "a"),
        ("earn", "a"),
        ("win", "i"),
        ("succeed", "e"),
        ("triumph", "i"),
        ("prevail", "a"),
        ("overcome", "o"),
        ("conquer", "o"),
        ("defeat", "e"),
        ("beat", "e"),
        ("surpass", "a"),
        ("exceed", "e"),
        ("outperform", "o"),
        ("excel", "e"),
        ("shine", "i"),
        ("glow", "o"),
        ("radiate", "a"),
        ("emit", "i"),
        ("produce", "u"),
        ("generate", "a"),
        ("create", "a"),
        ("make", "a"),
        ("build", "i"),
        ("construct", "u"),
        ("assemble", "e"),
        ("manufacture", "a"),
        ("fabricate", "a"),
        ("craft", "a"),
        ("forge", "o"),
        ("mold", "o"),
        ("shape", "a"),
        ("form", "o"),
        ("sculpt", "u"),
        ("carve", "a")
    ]
    
    for word, expected in test_cases:
        assert get_closest_vowel(word) == expected